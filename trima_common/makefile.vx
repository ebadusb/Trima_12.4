################################################################################
#
# Makefile for trima_common library
#
################################################################################

ifeq ($(BUILD_TYPE),CLEAN)
.PHONY: all
all: clean
else
.PHONY: all
all: check_opt_change lib syslib 
endif

ADDN_INCDIR = -I..\cds

#
# MAINDIR should be set to the relative path from this makefile directory
# to the base trima project directory.  MAINDIR must use \ (DOS/Windows
# style) directory separators if they are needed.
#
MAINDIR = ..
include $(MAINDIR)/makefile.vxc

#
# The following should define all of the source files of each type
# to be compiled for the library
#
LIB_C_FILES   =
LIB_CXX_FILES = allocation_array.cpp an_alarm.cpp bio_signatures.cpp CatalogChecker.cpp \
		datfile.cpp filehelp.cpp pqinformation.cpp procstate.cpp \
		reasonlist.cpp reasonMap.cpp recoverytypes.cpp runinfomsg.cpp \
		random_file_storage.cpp safproc.cpp stappl.cpp substatemap.cpp \
		trima_assert.cpp stmain.cpp trimaOs.cpp trima_time.cpp
LIB_S_FILES =

#
# The following should define the location of the resulting library.  Note
# that ARCHIVE_DIR is used in DOS shell commands, and must use \ directory
# separators.
#
ARCHIVE_NAME = libtrima_common.a
ARCHIVE_DIR = $(MAINDIR)\lib

#
# This is the standard makefile for Trima libraries
#
include $(MAINDIR)/makefile.lib

#
# The common system library consists of peer reviewed modules available for
# use by safety critical code (such as driver level software).
#
SYS_ARCHIVE_NAME = libtrima_common_sys.a
SYS_ARCHIVE_DIR = $(subst \,/, $(ARCHIVE_DIR))
SYS_LIB_ARCHIVE = $(SYS_ARCHIVE_DIR)/$(SYS_ARCHIVE_NAME)
SYS_ARCHIVE_OBJ = $(addprefix $(CPU)/, datfile.o filehelp.o trima_assert.o CatalogChecker.o an_alarm.o)
ADDN_CLEAN := $(SYS_LIB_ARCHIVE)

.PHONY: syslib
syslib: $(SYS_LIB_ARCHIVE)

ifeq ($(CPU),SIMNT)
$(SYS_LIB_ARCHIVE) : $(SYS_ARCHIVE_DIR)/$(ARCHIVE_NAME) $(SYS_ARCHIVE_OBJ)
	@rm -f $@
	$(Q)$(AR) -cr $@ $(SYS_ARCHIVE_DIR)/$(ARCHIVE_NAME) $(SYS_ARCHIVE_OBJ)
else
$(SYS_LIB_ARCHIVE) : $(SYS_ARCHIVE_OBJ)
	@rm -f $@
	$(Q)$(AR) -rcs $@ $(SYS_ARCHIVE_OBJ)
endif
