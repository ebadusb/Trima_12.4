// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "donorinput.h"

/////////////////////////////////////////////////////////////////////////////
// CDonorinput

IMPLEMENT_DYNCREATE(CDonorinput, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CDonorinput properties

/////////////////////////////////////////////////////////////////////////////
// CDonorinput operations

BOOL CDonorinput::male()
{
	BOOL result;
	InvokeHelper(0x1, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CDonorinput::female()
{
	BOOL result;
	InvokeHelper(0x2, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

float CDonorinput::precount()
{
	float result;
	InvokeHelper(0x3, DISPATCH_METHOD, VT_R4, (void*)&result, NULL);
	return result;
}

float CDonorinput::safetyTBV()
{
	float result;
	InvokeHelper(0x4, DISPATCH_METHOD, VT_R4, (void*)&result, NULL);
	return result;
}

float CDonorinput::controlTBV()
{
	float result;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_R4, (void*)&result, NULL);
	return result;
}

BOOL CDonorinput::heightIsStandard()
{
	BOOL result;
	InvokeHelper(0x6, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

float CDonorinput::height()
{
	float result;
	InvokeHelper(0x7, DISPATCH_METHOD, VT_R4, (void*)&result, NULL);
	return result;
}

float CDonorinput::weight()
{
	float result;
	InvokeHelper(0x8, DISPATCH_METHOD, VT_R4, (void*)&result, NULL);
	return result;
}

float CDonorinput::hematocrit()
{
	float result;
	InvokeHelper(0x9, DISPATCH_METHOD, VT_R4, (void*)&result, NULL);
	return result;
}

long CDonorinput::bloodType()
{
	long result;
	InvokeHelper(0xa, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CDonorinput::weightIsStandard()
{
	BOOL result;
	InvokeHelper(0xb, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CDonorinput::SetBloodType(long blood_type)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xc, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 blood_type);
}

void CDonorinput::SetHeight(float height)
{
	static BYTE parms[] =
		VTS_R4;
	InvokeHelper(0xd, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 height);
}

void CDonorinput::SetHematocrit(float hematocrit)
{
	static BYTE parms[] =
		VTS_R4;
	InvokeHelper(0xe, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hematocrit);
}

void CDonorinput::SetWeight(float weight)
{
	static BYTE parms[] =
		VTS_R4;
	InvokeHelper(0xf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 weight);
}

void CDonorinput::SetHeightStandard(BOOL height_is_standard)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x10, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 height_is_standard);
}

void CDonorinput::SetWeightStandard(BOOL weight_is_standard)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x11, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 weight_is_standard);
}

void CDonorinput::SetMale(BOOL sex_is_male)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x12, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 sex_is_male);
}

void CDonorinput::SetPrecount(float precount)
{
	static BYTE parms[] =
		VTS_R4;
	InvokeHelper(0x13, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 precount);
}
