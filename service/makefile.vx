################################################################################
#
# Makefile for service-related apps
#
################################################################################

ifeq ($(BUILD_TYPE),CLEAN)
.PHONY: all
all: clean
else
.PHONY: all
all: check_opt_change bitmap_info.cpp libs app bin/updateTrima
endif

#
# Define location for unicode stuff
#
UNICODEDIR = ../gui/unicode_string
UNICODELIBDIR = $(UNICODEDIR)/lib
DLMLIBDIR = $(COMDIR)/dlm/lib

#
# Local overrides - must be defined before including makefile.vxc
#
ADDN_INCDIR = -I..\trima_common -I..\gui -I..\cds -I..\tcpip -I..\proc\algorithm -I..\proc\interface  -I..\proc\hal -I$(UNICODEDIR)

# The following ADDN_LDFLAGS was removed and code placed in
# guiinit.cpp instead that would accomplish the same thing.
# Doing this allows updateTrima.cpp to compile with out trying
# to link in gui.
# ADDN_LDFLAGS = -u _guimain

#
# MAINDIR should be set to the relative path from this makefile directory
# to the base trima project directory.  MAINDIR must use \ (DOS/Windows
# style) directory separators if they are needed.
#
MAINDIR = ..
GUIDIR = $(MAINDIR)\gui
include $(MAINDIR)/makefile.vxc

#
# Define location for Trima libraries
#
LIBDIR = $(MAINDIR)/lib

# These files are generated by buildBitmapInfo
BM_INFO_OUTPUT = bitmap_info.cpp \
                 bitmap_info_id.h \
                 bitmap_logging.cpp \
                 .dfile/bitmap_info_cpp.d

ADDN_CLEAN = $(BM_INFO_OUTPUT) bitmap.info

ifneq ($(BUILD_TYPE),CLEAN)
-include .dfile/bitmap_info_cpp.d
endif

bitmap_info.cpp bitmap_info_id.h .dfile/bitmap_info_cpp.d : $(GUIDIR)/bitmap.info | .dfile
	@echo x Generating bitmap files: $(BASEDIR)/$@
	@copy $(GUIDIR)\bitmap.info bitmap.info  
	$(Q)$(MAINDIR)\engr_tools\guiTools\buildBitmapInfo\release\buildBitmapInfo ./ $(MAINDIR)/focgui/newart/ -service

.PHONY: libs
libs:
	@cd $(MAINDIR)\trima_common && $(MAKE) -f makefile.vx CPU=$(CPU) BUILD_TYPE=$(BUILD_TYPE) COMDIR=$(COMDIR)
	@cd $(MAINDIR)\gui && $(MAKE) -f makefile_lib.vx CPU=$(CPU) BUILD_TYPE=$(BUILD_TYPE) COMDIR=$(COMDIR)
#
# The following should define all of the source files of each type
# to be compiled for the executable
#
APP_NAME := service_graphics_package
service_graphics_package_dir       = $(MAINDIR)/bin
service_graphics_package_c_files   =
service_graphics_package_cxx_files = bitmap_info.cpp
include $(MAINDIR)/makefile.process_app

APP_NAME := meter
meter_dir = bin
meter_c_files   =
meter_cxx_files = meter.cpp
meter_libs = $(LIBDIR)\libtrima_common.a
meter_lib_list =
include $(MAINDIR)/makefile.process_app

APP_NAME := sumo
sumo_dir = bin
sumo_c_files   =
sumo_cxx_files = sumo.cpp
sumo_libs = $(LIBDIR)\libtrima_common.a
sumo_lib_list =
include $(MAINDIR)/makefile.process_app

APP_NAME := service
service_dir = bin
service_c_files   =
service_cxx_files = \
  service_con.cpp scrnname.cpp screentable.cpp service_palette.cpp guiinit.cpp \
  smdata.cpp smagent.cpp touchscreenCal.cpp
service_libs = \
  $(LIBDIR)\libgui.a $(LIBDIR)\libtrima_common.a $(LIBDIR)\libproc_algorithm.a \
  $(LIBDIR)\libproc_interface.a $(LIBDIR)\libproc_hal.a \
  $(UNICODELIBDIR)\libtrima_unicode_string.a $(DLMLIBDIR)\libdlm.a
service_lib_list =
include $(MAINDIR)/makefile.process_app

APP_NAME := update
update_dir  = bin
update_map  = update.map
update_cxx_files = updateTrima.cpp
update_libs = $(COMDIR)/softcrc/lib/libsoftcrc.a $(COMDIR)/zlib/lib/libzlib.a
include $(COMDIR)/makefile.process_app

# ------------------------------------------------------------------------------
# Copy update.out to updateTrima (copy instead of move to keep dependency chain intact)
# ------------------------------------------------------------------------------
$(update_dir)/updateTrima:$(update_dir)/$(APP_NAME).out
	cp $< $@

app : $(APP_LIST)

#
# This is the standard makefile for Trima applications
#
include $(MAINDIR)/makefile.build_apps

