################################################################################
#
# Makefile for trima_common_reentrant library
#
################################################################################

ifeq ($(BUILD_TYPE),CLEAN)
.PHONY: all
all: clean
else
.PHONY: all
all: check_opt_change lib safety_lib
endif

ADDN_INCDIR = -I..\trima_common  -I..\cds


#
# MAINDIR should be set to the relative path from this makefile directory
# to the base trima project directory.  MAINDIR must use \ (DOS/Windows
# style) directory separators if they are needed.
#
MAINDIR = ..
include $(MAINDIR)/makefile.vxc

#
# The following should define all of the source files of each type
# to be compiled for the library
#
LIB_C_FILES   =
LIB_CXX_FILES = adjust.cpp alarms.cpp alarmcontainer.cpp autocaldat.cpp \
		bloodtype.cpp caldat.cpp cassette.cpp cassette_dat.cpp \
		cfg_vars.cpp cobeconfig.cpp display_formatter.cpp \
		donor.cpp guiproc.cpp haldefs.cpp hour_meter_dat.cpp hwdat.cpp osfCalculator.cpp \
		pin_file.cpp predict_msgs.cpp rbcdat.cpp router_synch.cpp \
		statsContainer.cpp software_crc.cpp soundsdat.cpp trap_dat.cpp \
		trima_info.cpp trimamessages.cpp purgecalcs.cpp
LIB_S_FILES =

#
# The following should define the location of the resulting library.  Note
# that ARCHIVE_DIR is used in DOS shell commands, and must use \ directory
# separators.
#
ARCHIVE_NAME = libcontrol_reentrant.a
ARCHIVE_DIR = $(MAINDIR)\lib

#
# This is the standard makefile for Trima libraries (it defines LIB_ARCHIVE)
#
include $(MAINDIR)/makefile.lib

CONTROL_LIB_ARCHIVE := $(LIB_ARCHIVE)

# The common system library consists of peer reviewed modules available for
# use by safety critical code (such as driver level software).
#
SAFETY_ARCHIVE_NAME = libsafety_reentrant.a
SAFETY_ARCHIVE_DIR = $(subst \,/, $(ARCHIVE_DIR))
SAFETY_LIB_ARCHIVE = $(SAFETY_ARCHIVE_DIR)/$(SAFETY_ARCHIVE_NAME)
SAFETY_ARCHIVE_OBJ = $(CPU)/alarms.o $(CPU)/alarmcontainer.o $(CPU)/cfg_vars.o

ADDN_CLEAN := $(SAFETY_LIB_ARCHIVE)

.PHONY: safety_lib
safety_lib: $(SAFETY_LIB_ARCHIVE)

ifeq ($(CPU),SIMNT)
$(SAFETY_LIB_ARCHIVE) : $(CONTROL_LIB_ARCHIVE) $(SAFETY_ARCHIVE_OBJ)
	@rm -f $@
	$(Q)$(AR) -cr $@ $(CONTROL_LIB_ARCHIVE) $(SAFETY_ARCHIVE_OBJ)
else
$(SAFETY_LIB_ARCHIVE) : $(SAFETY_ARCHIVE_OBJ)
	$(Q)$(AR) -rcs $(CPU)/$(SAFETY_ARCHIVE_NAME) $(SAFETY_ARCHIVE_OBJ) 
	@mv -f $(CPU)/$(SAFETY_ARCHIVE_NAME) $@
endif

$(SAFETY_LIB_ARCHIVE) : | $(SAFETY_ARCHIVE_DIR)
$(SAFETY_ARCHIVE_OBJ) : | $(CPU)

